importPackage( dw.svc );
importPackage( dw.net );
importPackage( dw.io );


ServiceRegistry.configure("turnto.http.static.qa.get", {
    createRequest: function(svc:HTTPService, args) {
        svc.setRequestMethod("GET");
    },
    parseResponse : function(svc:HTTPService, client:HTTPClient) {
        return client.text;        
    },
    mockCall : function(svc:HTTPService, client:HTTPClient) {
        return {
        	statusCode: 200,
        	statusMessage: 'Success',
        	text: '<div id="TurnToContent"></div>'
        };
    }
});

ServiceRegistry.configure("turnto.http.static.reviews.get", {
    createRequest: function(svc:HTTPService, args) {
        svc.setRequestMethod("GET");
    },
    parseResponse : function(svc:HTTPService, client:HTTPClient) {
        return client.text;        
    },
    mockCall : function(svc:HTTPService, client:HTTPClient) {
        return {
        	statusCode: 200,
        	statusMessage: 'Success',
        	text: '<div id="TurnToReviewsContent"></div>'
        };
    }
});

ServiceRegistry.configure("turnto.http.import.ratings.get", {
    createRequest: function(svc:HTTPService, args) {
        svc.setRequestMethod("GET");
    },
    parseResponse : function(svc:HTTPService, client:HTTPClient) {
        return client.text;        
    }
});

ServiceRegistry.configure("turnto.http.import.content.get", {
    createRequest: function(svc:HTTPService, args) {
        svc.setRequestMethod("GET");
    },
    parseResponse : function(svc:HTTPService, client:HTTPClient) {
        return client.text;        
    }
});

ServiceRegistry.configure("turnto.http.export.catalog.post", {
    parseResponse : function(svc:HTTPService, client:HTTPClient) {
        return client.text;        
    },
    execute: function(svc:HTTPService, args) {
    	var url:String= dw.system.Site.getCurrent().getCustomPreferenceValue('turntoURL') + '/feedUpload/postfile';
    	var client:HTTPClient = new HTTPClient();
    	client.setTimeout( svc.configuration.profile.timeoutMillis);
    	client.open("POST", url);
        client.sendMultiPart( args.toArray() );
        return client.text;
    }
});

ServiceRegistry.configure("turnto.http.export.orders.post", {
    parseResponse : function(svc:HTTPService, client:HTTPClient) {
        return client.text;        
    },
    execute: function(svc:HTTPService, args) {
    	var url:String= dw.system.Site.getCurrent().getCustomPreferenceValue('turntoURL') + '/feedUpload/postfile';
    	var client:HTTPClient = new HTTPClient();
    	client.setTimeout( svc.configuration.profile.timeoutMillis);
    	client.open("POST", url);
        client.sendMultiPart( args.toArray() );
        return client.text;
    }
});